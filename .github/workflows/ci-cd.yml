name: CI/CD Pipeline with Slack Integration

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt' # O 'adopt' si usas adoptOpenJDK, o 'oracle' si deseas la distribución de oracle.

      - name: Build with Maven
        run: mvn clean package
        working-directory: CalculatorApi

      - name: Run Unit Tests
        run: mvn test
        working-directory: CalculatorApi

      - name: Run Functional Tests
        run: mvn verify
        working-directory: CalculatorApi

  notify-and-define-tag:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Notify Slack for Tag Definition
        uses: actions/github-script@v6
        with:
          script: |
            const webhookUrl = "https://hooks.slack.com/services/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";
            const payload = {
              channel: "#calculator-api",
              username: "hadrian",
              icon_emoji: ":ghost:",
              text: "🚀 *Definir Tag para Despliegue* 🚀\nPor favor, ingresa el tag que deseas usar (por ejemplo, `v1.0.0`). Responde a este mensaje con el tag.",
              attachments: [
                {
                  fallback: "Responde con el tag.",
                  callback_id: "tag_definition",
                  actions: [
                    {
                      type: "button",
                      text: "Definir Tag",
                      url: "https://github.com/${{ github.repository }}/actions"
                    }
                  ]
                }
              ]
            };
            await fetch(webhookUrl, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(payload),
            });

      - name: Wait for Tag Definition
        run: |
          echo "Esperando definición del tag..."
          sleep 300  # Espera 5 minutos (ajusta según sea necesario)

      - name: Save Tag
        run: |
          echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV

  manual-approval:
    runs-on: ubuntu-latest
    needs: notify-and-define-tag
    steps:
      - name: Notify Slack for Manual Approval
        uses: actions/github-script@v6
        with:
          script: |
            const webhookUrl = "https://hooks.slack.com/services/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";
            const payload = {
              channel: "#calculator-api",
              username: "hadrian",
              icon_emoji: ":ghost:",
              text: "🛑 *Aprobación Manual Requerida* 🛑\nPor favor, aprueba el despliegue en producción.",
              attachments: [
                {
                  fallback: "Aprobar o Rechazar Despliegue.",
                  callback_id: "manual_approval",
                  actions: [
                    {
                      type: "button",
                      text: "Aprobar",
                      style: "primary",
                      url: "https://github.com/${{ github.repository }}/actions"
                    },
                    {
                      type: "button",
                      text: "Rechazar",
                      style: "danger",
                      url: "https://github.com/${{ github.repository }}/actions"
                    }
                  ]
                }
              ]
            };
            await fetch(webhookUrl, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(payload),
            });

      - name: Wait for Manual Approval
        run: |
          echo "Esperando aprobación manual..."
          sleep 300  # Espera 5 minutos (ajusta según sea necesario)

  deploy:
    runs-on: ubuntu-latest
    needs: manual-approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/my-java-api:${{ env.TAG }} .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-java-api:${{ env.TAG }}

      - name: Deploy to Production
        run: echo "Desplegando en producción..."